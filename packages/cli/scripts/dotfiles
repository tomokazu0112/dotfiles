#!/bin/sh

set -e

GIT_CLONE_PATH=~/.dotfiles
STOW_PACKAGES_PATH="$GIT_CLONE_PATH"/packages

###########################################################
# Options
###########################################################

skip_apps=
unlink_packages=
verbose=
for i in "$@"; do
    case "$i" in
        -s|--skip-apps)
            skip_apps=1
            ;;
        -v|--verbose)
            verbose=1
            ;;
        -u=*|--unlink=*)
            unlink_packages="${i#*=}"
            ;;
        *) ;;
    esac
done

###########################################################
# Utils
###########################################################

log() {
    message=$1
    echo ðŸ“Œ "$message"
}

is_file() {
    path="$1"
    [ -f "$path" ]
}

is_dir() {
    path="$1"
    [ -d "$path" ]
}

ensure_dir() {
    path="$1"
    if ! is_dir "$path"; then
        mkdir -p "$path"
    fi
}

###########################################################
# Stow unlink
###########################################################

if [ -n "$unlink_packages" ]; then
    log 'Unlinking dotfiles...'
    stow -vD -d "$STOW_PACKAGES_PATH" -t ~ "$unlink_packages"
    exit
fi

###########################################################
# Install Homebrew
###########################################################

if ! is_file /opt/homebrew/bin/brew; then
    log 'Setup Homebrew'
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    (echo; echo 'eval "$(/opt/homebrew/bin/brew shellenv)"') >> ~/.zprofile
    eval "$(/opt/homebrew/bin/brew shellenv)"

    log 'Install Rosetta 2'
    sudo softwareupdate --install-rosetta
fi

if ! is_dir "$GIT_CLONE_PATH"; then
    ensure_dir "$GIT_CLONE_PATH"

    log 'Clone dotfiles'
    cd "$GIT_CLONE_PATH"
    git clone https://github.com/tomokazu0112/dotfiles.git
fi

if [ ! "$skip_apps" ]; then
    log 'Install Apps and CLIs'
    brew bundle --file "$GIT_CLONE_PATH"/Brewfile $([ -n "$verbose" ] && echo -v)
fi

###########################################################
# Stow link
###########################################################

log 'Link dotfiles'
ensure_dir ~/scripts
ensure_dir ~/.config/karabiner
ASDF_PATH=~/.asdf
ensure_dir "$ASDF_PATH"
ensure_dir ~/.config/alacritty
ensure_dir ~/.zsh
ensure_dir ~/.zsh/zsh-autosuggestions

# shellcheck disable=SC2046
stow -vd "$STOW_PACKAGES_PATH" -t ~ $(ls $STOW_PACKAGES_PATH)

# configure macOS settings
ensure_dir ~/screenshots
~/scripts/macos-defaults

###########################################################
# Git
###########################################################

if ! is_file ~/.ssh/id_ed25519.pub; then
    log 'Setup signing for git'
    echo 'Please enter your email address: '
    read email
    ssh-keygen -t ed25519 -C "$email"
    log 'Copy and pates the SSH key below to GitHub'
    cat ~/.ssh/id_ed25519.pub
fi
